name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: wasm32-unknown-unknown
        override: true
        profile: minimal

    - name: Cache Cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install wasm-bindgen-cli
      run: cargo install wasm-bindgen-cli --version 0.2.103

    - name: Build WASM
      run: |
        cargo build --target wasm32-unknown-unknown --release
        wasm-bindgen --out-dir pkg --target web --no-typescript target/wasm32-unknown-unknown/release/leptos_pomodoro.wasm

    - name: Prepare deployment files
      run: |
        mkdir -p dist
        cp index.html dist/
        cp -r pkg dist/
        
        # Create .nojekyll file to prevent GitHub Pages from processing files with underscores
        touch dist/.nojekyll
        
        # Create _headers file for WASM MIME type (for Netlify-style hosting)
        # GitHub Pages doesn't support _headers but .nojekyll should help
        echo "/*.wasm" > dist/_headers
        echo "  Content-Type: application/wasm" >> dist/_headers
        
        # Verify files are correct
        echo "Contents of dist directory:"
        ls -la dist/
        echo "Contents of dist/pkg directory:"
        ls -la dist/pkg/

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4